@charset "UTF-8";

$cWhite: white; // 変数としての指定を行う
$cBlack: black;

#container {
	text-align: center;
}

.try {
	& .btn { // class="btn"で設定されているものに全て適用
		position: relative;
		display: inline-block;
		background-color: $cWhite;
		border: 1px solid $cBlack;
		font-weight: 600;
		padding: 10px 40px;
		margin: 50px auto;
		cursor: pointer;
		transition: all 0.3s;

		&.float:hover { // floatにhoverされた場合に発火
			background-color: $cBlack;
			color: $cWhite;
			box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.5);
		}

		&.filled { // filledのみに指定
			background-color: $cBlack;
			color: $cWhite;
			box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.5);

			&:hover { // hoverした場合に発火
				background-color: $cWhite;
				color: $cBlack;
				box-shadow: none;
			}
		}

		&.letter-spacing:hover {
			background-color: $cBlack;
			letter-spacing: 3px;
			color: $cWhite;
		}

		&.shadow:hover {
			transform: translate(-2.5px, -2.5px); // translate(x軸,y軸)
			box-shadow: 5px 5px 0 0 black;
		}

		&.solid {
			box-shadow: 2px 2px 0 0 black;
			border-radius: 10px;

			&:hover {
				transform: translate(2px, 2px);
				box-shadow: none;
				border-radius: 10px;
			}
		}

		&.slide-bg {
			position: relative;
			overflow: hidden; // 枠外の要素を非表示
			z-index: 1; // z-index => 重なりの順序の指定(※ 0が基準となって値が大き程、手前)
			&::before {
				content: ''; // 擬似要素の設定には必須　※ 文字列でも指定できる
				display: inline-block;
				width: 100%;
				height: 100%;
				background-color: $cBlack;
				position: absolute;
				top: 0;
				left: 0;
				transform: translate(-100%);
				transition: transform 0.3s;
				z-index: -1; // slide-bgよりも手前の表示となる
			}

			&:hover {
				color: $cWhite;
				&::before { // 擬似要素の設定
					transform: none;
				}
			}
		}

		&.cover-3d {
			position: relative;
			z-index: 1; // z-index => 重なりの順序の指定(※ 0が基準となって値が大き程、手前)
			transform-style: preserve-3d; // 3Dの付与
			perspective: 300px; // 奥行きの設定

			&::before {
				content: ''; // 擬似要素の設定には必須　※ 文字列でも指定できる
				display: inline-block;
				width: 100%;
				height: 100%;
				background-color: $cBlack;
				position: absolute;
				top: 0;
				left: 0;
				transform: rotateX(90deg);
				transition: all 0.3s;
				transform-origin: top center;
				z-index: -1; // slide-bgよりも手前の表示となる
				opacity: 0; // 透明度の設定
			}

			&:hover {
				color: $cWhite;
				&::before { // 擬似要素の設定
					transform: none;
					opacity: 1;
				}
			}
		}


		&.cover-3d-2 {
			position: relative;
			overflow: hidden; // 枠外の要素を非表示
			z-index: 1; // z-index => 重なりの順序の指定(※ 0が基準となって値が大き程、手前)
			transform-style: preserve-3d; // 3Dの付与
			perspective: 300px; // 奥行きの設定

			&::before {
				content: ''; // 擬似要素の設定には必須　※ 文字列でも指定できる
				display: inline-block;
				width: 100%;
				height: 100%;
				background-color: $cBlack;
				position: absolute;
				top: 0;
				left: 0;
				transform: rotateX(-90deg);
				transition: all 0.3s;
				z-index: -1; // slide-bgよりも手前の表示となる
			}

			&:hover {
				color: $cWhite;
				&::before { // 擬似要素の設定
					transform: none;
				}
			}
		}

		&.cover-3d-3 {
			position: relative;
			z-index: 1; // z-index => 重なりの順序の指定(※ 0が基準となって値が大き程、手前)
			transform-style: preserve-3d; // 3Dの付与
			perspective: 300px; // 奥行きの設定

			& span {
				display: inline-block;
				transform: translate3d(0,0,20px);
			}

			&::before {
				content: ''; // 擬似要素の設定には必須　※ 文字列でも指定できる
				display: inline-block;
				width: 100%;
				height: 100%;
				background-color: $cBlack;
				position: absolute;
				top: 0;
				left: 0;
				transform: rotateX(90deg);
				transition: all 1s;
				transform-origin: top center;
				opacity: 0; // 透明度の設定
			}

			&:hover {
				color: $cWhite;
				&::before { // 擬似要素の設定
					transform: none;
					opacity: 1;
				}
			}
		}
	}

	.btn-2 {
		position: relative;
		display: inline-block;
		transform-style: preserve-3d;
		perspective: 300px;
		width: 150px;
		height: 50px;
		margin: 0 auto;
		cursor: pointer;

		&.cubic {

			& span{
				position: absolute;
				top: 0 ;
				left: 0;
				width: 100%;
				height: 100%;
				border: 1px solid $cBlack;
				line-height: 48px; // 行間の指定
				text-align: center;
				transition: all 0.3s;
			}

			& .hovering {
				background-color: $cBlack;
				color: $cWhite;
				transform: rotateX(90deg);
				transform-origin: center center -25px;
			}

			& .default {
				background-color: $cWhite;
				color: $cBlack;
				transform: rotateX(0);
				transform-origin: center center -25px;
			}

			&:hover {
				& .hovering {
					transform: rotateX(0);
				}
				& .default {
					transform: rotateX(-90deg);
				}
			}
		}
	}
}

.rect {
	width: 100px;
	height: 100px;
	margin: 0 auto;
	background-color: orangered;
	transform-origin: center center; // 物体に任意の点を付与(x,y指定可能)
	transform: scale(1); // scale => 倍の大きさに変形(x,y指定可能)
	// transform: skew(30deg); // skew => 平行に変形(x,y指定可能)
	// transform: rotate(30deg); // rotate => 物体を回転させる(x,y指定可能)
	// transform: translate(50px 50px); // translate => 物体を移動させる(x,y指定可能) ※ ％指定も可能
}

.parent {
	background-color: skyblue;
	height: 600px;
	width: 100%;
	text-align: left;
	display: flex; // 要素を重ねたくない場合
	justify-content: center; // space-around(均等に間隔が空く) space-between(要素ごとに均等に間隔が空く)
	align-items: center;
	flex-direction: column; // 並ぶ方向の指定
	// position: relative; 要素を重ねる場合に使用
	// letter-spacing: -16px; 文字間隔の定義
}

.child {
	// position: absolute; 要素を重ねる場合に使用
	// top: 50%;
	// left: 50%;
	// transform: translate(-50%, -50%);
	background-color: orange;
	width: 100px;
	height: 100px;
	font-weight: 600;
	// margin: 0 auto;
	// display: inline-block; inline-blockするとmargin等の指定が行えない
}

.child.v2{
	width: 200px;
	height: 200px;
	background-color: palevioletred;
}

.child.v3{
	background-color: rebeccapurple;
}

@import'appear';

img {
	max-width: 80%;
}